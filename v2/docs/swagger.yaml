openapi: 3.0.3
info:
  title: Visa Application System v2 API
  description: |
    A scalable and secure backend system for visa application mobile app with admin-controlled configurations.

    ## Architecture
    The v2 system is completely isolated from the existing backend and follows a modular architecture:
    - **Admin API** (Phase 1) - Configuration and management ✅
    - **User API** (Phase 2) - Application workflow (coming soon)

    ## Authentication
    All admin endpoints require authentication (to be implemented).
    User endpoints will require session-based or JWT authentication.

    ## Error Handling
    All endpoints return standardized error responses with proper HTTP status codes.

  version: 2.0.0
  contact:
    name: Visa Application System
    email: support@visacollect.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8090/api/v2
    description: Development server
  - url: https://api.visacollect.com/api/v2
    description: Production server

tags:
  - name: Health
    description: System health checks
  - name: Admin - Countries
    description: Country management operations
  - name: Admin - Visa Types
    description: Visa type management operations
  - name: Admin - Visa Rules
    description: Visa rule management operations
  - name: Admin - Processing Times
    description: Processing time management operations (coming soon)
  - name: Admin - Appointment Centers
    description: Appointment center management operations (coming soon)
  - name: Admin - Service Fees
    description: Service fee management operations (coming soon)
  - name: Admin - Document Requirements
    description: Document requirement management operations (coming soon)

paths:
  # Health Check
  /health:
    get:
      tags:
        - Health
      summary: Health check
      description: Check if the v2 API is running
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  # Admin - Countries
  /admin/countries:
    get:
      tags:
        - Admin - Countries
      summary: Get all countries
      description: Retrieve all countries with pagination and filtering
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Items per page
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: search
          in: query
          description: Search term for country name or ISO code
          schema:
            type: string
        - name: isActive
          in: query
          description: Filter by active status
          schema:
            type: boolean
        - name: allowAsOrigin
          in: query
          description: Filter countries that can be selected as origin
          schema:
            type: boolean
        - name: allowAsDestination
          in: query
          description: Filter countries that can be selected as destination
          schema:
            type: boolean
      responses:
        '200':
          description: Countries retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesResponse'
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Admin - Countries
      summary: Create a new country
      description: Add a new country to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCountryRequest'
      responses:
        '201':
          description: Country created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Country already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/countries/origin:
    get:
      tags:
        - Admin - Countries
      summary: Get origin countries
      description: Get countries that can be selected as passport origin
      responses:
        '200':
          description: Origin countries retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesListResponse'

  /admin/countries/destination:
    get:
      tags:
        - Admin - Countries
      summary: Get destination countries
      description: Get countries that can be selected as travel destination
      responses:
        '200':
          description: Destination countries retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesListResponse'

  /admin/countries/{id}:
    get:
      tags:
        - Admin - Countries
      summary: Get country by ID
      description: Retrieve a specific country by its ID
      parameters:
        - name: id
          in: path
          required: true
          description: Country ID
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      responses:
        '200':
          description: Country retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryResponse'
        '404':
          description: Country not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Admin - Countries
      summary: Update country
      description: Update an existing country
      parameters:
        - name: id
          in: path
          required: true
          description: Country ID
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCountryRequest'
      responses:
        '200':
          description: Country updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryResponse'
        '404':
          description: Country not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict with existing country
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Admin - Countries
      summary: Delete country
      description: Soft delete a country (sets isActive to false)
      parameters:
        - name: id
          in: path
          required: true
          description: Country ID
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      responses:
        '200':
          description: Country deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryResponse'
        '404':
          description: Country not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/countries/{id}/toggle-status:
    patch:
      tags:
        - Admin - Countries
      summary: Toggle country status
      description: Toggle the active status of a country
      parameters:
        - name: id
          in: path
          required: true
          description: Country ID
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      responses:
        '200':
          description: Country status toggled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryResponse'
        '404':
          description: Country not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Admin - Visa Types
  /admin/visa-types:
    get:
      tags:
        - Admin - Visa Types
      summary: Get all visa types
      description: Retrieve all visa types with pagination and filtering
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Items per page
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: search
          in: query
          description: Search term for visa type name or code
          schema:
            type: string
        - name: isActive
          in: query
          description: Filter by active status
          schema:
            type: boolean
        - name: category
          in: query
          description: Filter by category
          schema:
            type: string
            enum: [tourist, business, transit, student, work, medical, other]
      responses:
        '200':
          description: Visa types retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisaTypesResponse'

    post:
      tags:
        - Admin - Visa Types
      summary: Create a new visa type
      description: Add a new visa type to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVisaTypeRequest'
      responses:
        '201':
          description: Visa type created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisaTypeResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/visa-types/active:
    get:
      tags:
        - Admin - Visa Types
      summary: Get active visa types
      description: Get all active visa types for selection
      responses:
        '200':
          description: Active visa types retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisaTypesListResponse'

  /admin/visa-types/{id}:
    get:
      tags:
        - Admin - Visa Types
      summary: Get visa type by ID
      description: Retrieve a specific visa type by its ID
      parameters:
        - name: id
          in: path
          required: true
          description: Visa type ID
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      responses:
        '200':
          description: Visa type retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisaTypeResponse'
        '404':
          description: Visa type not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Admin - Visa Types
      summary: Update visa type
      description: Update an existing visa type
      parameters:
        - name: id
          in: path
          required: true
          description: Visa type ID
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVisaTypeRequest'
      responses:
        '200':
          description: Visa type updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisaTypeResponse'

    delete:
      tags:
        - Admin - Visa Types
      summary: Delete visa type
      description: Soft delete a visa type
      parameters:
        - name: id
          in: path
          required: true
          description: Visa type ID
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      responses:
        '200':
          description: Visa type deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisaTypeResponse'

  # Admin - Visa Rules
  /admin/visa-rules:
    get:
      tags:
        - Admin - Visa Rules
      summary: Get all visa rules
      description: Retrieve all visa rules with pagination and filtering
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Items per page
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: search
          in: query
          description: Search term
          schema:
            type: string
        - name: isActive
          in: query
          description: Filter by active status
          schema:
            type: boolean
        - name: isVisaAvailable
          in: query
          description: Filter by visa availability
          schema:
            type: boolean
        - name: fromCountry
          in: query
          description: Filter by origin country ID
          schema:
            type: string
        - name: toCountry
          in: query
          description: Filter by destination country ID
          schema:
            type: string
        - name: visaType
          in: query
          description: Filter by visa type ID
          schema:
            type: string
      responses:
        '200':
          description: Visa rules retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisaRulesResponse'

    post:
      tags:
        - Admin - Visa Rules
      summary: Create a new visa rule
      description: Add a new visa rule to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVisaRuleRequest'
      responses:
        '201':
          description: Visa rule created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisaRuleResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/visa-rules/check-eligibility:
    get:
      tags:
        - Admin - Visa Rules
      summary: Check visa eligibility
      description: Check if visa is available for a country combination
      parameters:
        - name: fromCountryId
          in: query
          required: true
          description: Origin country ID
          schema:
            type: string
        - name: toCountryId
          in: query
          required: true
          description: Destination country ID
          schema:
            type: string
        - name: visaTypeId
          in: query
          description: Specific visa type ID (optional)
          schema:
            type: string
      responses:
        '200':
          description: Visa eligibility checked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisaEligibilityResponse'

  /admin/visa-rules/{id}:
    get:
      tags:
        - Admin - Visa Rules
      summary: Get visa rule by ID
      description: Retrieve a specific visa rule by its ID
      parameters:
        - name: id
          in: path
          required: true
          description: Visa rule ID
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      responses:
        '200':
          description: Visa rule retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisaRuleResponse'
        '404':
          description: Visa rule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Admin - Visa Rules
      summary: Update visa rule
      description: Update an existing visa rule
      parameters:
        - name: id
          in: path
          required: true
          description: Visa rule ID
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVisaRuleRequest'
      responses:
        '200':
          description: Visa rule updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisaRuleResponse'

    delete:
      tags:
        - Admin - Visa Rules
      summary: Delete visa rule
      description: Soft delete a visa rule
      parameters:
        - name: id
          in: path
          required: true
          description: Visa rule ID
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      responses:
        '200':
          description: Visa rule deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisaRuleResponse'

components:
  schemas:
    # Common Schemas
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: 'Operation completed successfully'
        data:
          type: object

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: 'Operation failed'
        errors:
          type: array
          items:
            type: string
          example: ['Field is required', 'Invalid format']

    PaginationMeta:
      type: object
      properties:
        currentPage:
          type: integer
          example: 1
        totalPages:
          type: integer
          example: 5
        totalItems:
          type: integer
          example: 50
        itemsPerPage:
          type: integer
          example: 10
        hasNextPage:
          type: boolean
          example: true
        hasPrevPage:
          type: boolean
          example: false

    # Health Response
    HealthResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                message:
                  type: string
                  example: 'Visa Application API v2 is running'
                timestamp:
                  type: string
                  format: date-time
                version:
                  type: string
                  example: '2.0.0'
                modules:
                  type: object
                  properties:
                    admin:
                      type: string
                      example: 'active'
                    user:
                      type: string
                      example: 'coming_soon'

    # Country Schemas
    Currency:
      type: object
      properties:
        code:
          type: string
          example: 'USD'
          maxLength: 3
        symbol:
          type: string
          example: '$'
        name:
          type: string
          example: 'US Dollar'
      required:
        - code
        - symbol
        - name

    CountryMetadata:
      type: object
      properties:
        continent:
          type: string
          example: 'North America'
        region:
          type: string
          example: 'Northern America'
        subregion:
          type: string
          example: 'Northern America'

    Country:
      type: object
      properties:
        _id:
          type: string
          example: '60d5f8f8f8f8f8f8f8f8f8f8'
        name:
          type: string
          example: 'United States'
        isoCode:
          type: string
          example: 'US'
          maxLength: 2
        iso3Code:
          type: string
          example: 'USA'
          maxLength: 3
        flagUrl:
          type: string
          format: uri
          example: 'https://example.com/flags/us.png'
        dialCode:
          type: string
          example: '+1'
        currency:
          $ref: '#/components/schemas/Currency'
        isActive:
          type: boolean
          example: true
        allowAsOrigin:
          type: boolean
          example: true
        allowAsDestination:
          type: boolean
          example: true
        metadata:
          $ref: '#/components/schemas/CountryMetadata'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - isoCode
        - iso3Code
        - flagUrl
        - dialCode
        - currency

    CreateCountryRequest:
      type: object
      properties:
        name:
          type: string
          example: 'United States'
          maxLength: 100
        isoCode:
          type: string
          example: 'US'
          maxLength: 2
        iso3Code:
          type: string
          example: 'USA'
          maxLength: 3
        flagUrl:
          type: string
          format: uri
          example: 'https://example.com/flags/us.png'
        dialCode:
          type: string
          example: '+1'
        currency:
          $ref: '#/components/schemas/Currency'
        isActive:
          type: boolean
          default: true
        allowAsOrigin:
          type: boolean
          default: true
        allowAsDestination:
          type: boolean
          default: true
        metadata:
          $ref: '#/components/schemas/CountryMetadata'
      required:
        - name
        - isoCode
        - iso3Code
        - flagUrl
        - dialCode
        - currency

    UpdateCountryRequest:
      type: object
      properties:
        name:
          type: string
          example: 'United States'
          maxLength: 100
        isoCode:
          type: string
          example: 'US'
          maxLength: 2
        iso3Code:
          type: string
          example: 'USA'
          maxLength: 3
        flagUrl:
          type: string
          format: uri
          example: 'https://example.com/flags/us.png'
        dialCode:
          type: string
          example: '+1'
        currency:
          $ref: '#/components/schemas/Currency'
        isActive:
          type: boolean
        allowAsOrigin:
          type: boolean
        allowAsDestination:
          type: boolean
        metadata:
          $ref: '#/components/schemas/CountryMetadata'

    CountryResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Country'

    CountriesResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                countries:
                  type: array
                  items:
                    $ref: '#/components/schemas/Country'
                pagination:
                  $ref: '#/components/schemas/PaginationMeta'

    CountriesListResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  isoCode:
                    type: string
                  iso3Code:
                    type: string
                  flagUrl:
                    type: string
                  dialCode:
                    type: string

    # Visa Type Schemas
    VisaTypeMetadata:
      type: object
      properties:
        icon:
          type: string
          example: '🏖️'
        color:
          type: string
          example: '#blue'
        sortOrder:
          type: integer
          example: 1
        features:
          type: array
          items:
            type: string
          example: ['Single entry', '90 days validity']

    VisaType:
      type: object
      properties:
        _id:
          type: string
          example: '60d5f8f8f8f8f8f8f8f8f8f8'
        name:
          type: string
          example: 'Tourist Visa'
        code:
          type: string
          example: 'TOURIST'
        description:
          type: string
          example: 'For tourism and leisure purposes'
        category:
          type: string
          enum: [tourist, business, transit, student, work, medical, other]
          example: 'tourist'
        isActive:
          type: boolean
          example: true
        metadata:
          $ref: '#/components/schemas/VisaTypeMetadata'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - code
        - description
        - category

    CreateVisaTypeRequest:
      type: object
      properties:
        name:
          type: string
          example: 'Tourist Visa'
          maxLength: 100
        code:
          type: string
          example: 'TOURIST'
          maxLength: 20
        description:
          type: string
          example: 'For tourism and leisure purposes'
          maxLength: 500
        category:
          type: string
          enum: [tourist, business, transit, student, work, medical, other]
          example: 'tourist'
        isActive:
          type: boolean
          default: true
        metadata:
          $ref: '#/components/schemas/VisaTypeMetadata'
      required:
        - name
        - code
        - description
        - category

    UpdateVisaTypeRequest:
      type: object
      properties:
        name:
          type: string
          example: 'Tourist Visa'
          maxLength: 100
        code:
          type: string
          example: 'TOURIST'
          maxLength: 20
        description:
          type: string
          example: 'For tourism and leisure purposes'
          maxLength: 500
        category:
          type: string
          enum: [tourist, business, transit, student, work, medical, other]
        isActive:
          type: boolean
        metadata:
          $ref: '#/components/schemas/VisaTypeMetadata'

    VisaTypeResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/VisaType'

    VisaTypesResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                visaTypes:
                  type: array
                  items:
                    $ref: '#/components/schemas/VisaType'
                pagination:
                  $ref: '#/components/schemas/PaginationMeta'

    VisaTypesListResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  _id:
                    type: string
                  name:
                    type: string
                  code:
                    type: string
                  description:
                    type: string
                  category:
                    type: string

    # Visa Rule Schemas
    Validity:
      type: object
      properties:
        value:
          type: integer
          example: 1
          minimum: 1
        unit:
          type: string
          enum: [days, months, years]
          example: 'years'
      required:
        - value
        - unit

    GovernmentFee:
      type: object
      properties:
        amount:
          type: number
          example: 4500
          minimum: 0
        currency:
          type: string
          example: 'INR'
          maxLength: 3
      required:
        - amount
        - currency

    ProcessingTimeRange:
      type: object
      properties:
        min:
          type: integer
          example: 5
          minimum: 1
        max:
          type: integer
          example: 10
          minimum: 1
        unit:
          type: string
          enum: [hours, days, weeks]
          example: 'days'
      required:
        - min
        - max

    VisaRequirements:
      type: object
      properties:
        minimumValidityRequired:
          type: integer
          example: 6
          minimum: 0
        blankPagesRequired:
          type: integer
          example: 2
          minimum: 0
        biometricRequired:
          type: boolean
          example: false
        interviewRequired:
          type: boolean
          example: false

    VisaRule:
      type: object
      properties:
        _id:
          type: string
          example: '60d5f8f8f8f8f8f8f8f8f8f8'
        fromCountry:
          $ref: '#/components/schemas/Country'
        toCountry:
          $ref: '#/components/schemas/Country'
        visaType:
          $ref: '#/components/schemas/VisaType'
        isVisaAvailable:
          type: boolean
          example: true
        validity:
          $ref: '#/components/schemas/Validity'
        entryType:
          type: string
          enum: [single, multiple, double]
          example: 'multiple'
        governmentFee:
          $ref: '#/components/schemas/GovernmentFee'
        processingTimeRange:
          $ref: '#/components/schemas/ProcessingTimeRange'
        requirements:
          $ref: '#/components/schemas/VisaRequirements'
        isActive:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - fromCountry
        - toCountry
        - visaType
        - validity
        - governmentFee
        - processingTimeRange

    CreateVisaRuleRequest:
      type: object
      properties:
        fromCountry:
          type: string
          example: '60d5f8f8f8f8f8f8f8f8f8f8'
        toCountry:
          type: string
          example: '60d5f8f8f8f8f8f8f8f8f8f9'
        visaType:
          type: string
          example: '60d5f8f8f8f8f8f8f8f8f8fa'
        isVisaAvailable:
          type: boolean
          default: true
        validity:
          $ref: '#/components/schemas/Validity'
        entryType:
          type: string
          enum: [single, multiple, double]
          default: 'single'
        governmentFee:
          $ref: '#/components/schemas/GovernmentFee'
        processingTimeRange:
          $ref: '#/components/schemas/ProcessingTimeRange'
        requirements:
          $ref: '#/components/schemas/VisaRequirements'
        isActive:
          type: boolean
          default: true
      required:
        - fromCountry
        - toCountry
        - visaType
        - validity
        - governmentFee
        - processingTimeRange

    UpdateVisaRuleRequest:
      type: object
      properties:
        fromCountry:
          type: string
        toCountry:
          type: string
        visaType:
          type: string
        isVisaAvailable:
          type: boolean
        validity:
          $ref: '#/components/schemas/Validity'
        entryType:
          type: string
          enum: [single, multiple, double]
        governmentFee:
          $ref: '#/components/schemas/GovernmentFee'
        processingTimeRange:
          $ref: '#/components/schemas/ProcessingTimeRange'
        requirements:
          $ref: '#/components/schemas/VisaRequirements'
        isActive:
          type: boolean

    VisaRuleResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/VisaRule'

    VisaRulesResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                visaRules:
                  type: array
                  items:
                    $ref: '#/components/schemas/VisaRule'
                pagination:
                  $ref: '#/components/schemas/PaginationMeta'

    VisaEligibilityResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                isEligible:
                  type: boolean
                  example: true
                visaRules:
                  type: array
                  items:
                    $ref: '#/components/schemas/VisaRule'
                message:
                  type: string
                  example: 'Visa support available for this destination.'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication

security:
  - BearerAuth: []
